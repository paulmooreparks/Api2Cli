name: Auto Build and Version

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  auto-build:
    name: Auto Build and Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      # ────────────────────────── basic checkout & tooling ─────────────────────
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # ────────────────────────── stamp a unique version string ────────────────
      - name: Set Version
        id: set_version
        run: |
          VERSION=$(date +'%Y.%m.%d')-$GITHUB_RUN_NUMBER
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      # ────────────────────────── write version into the csproj ────────────────
      - name: Update project version
        shell: bash
        run: |
          # add nuget.org only if it's missing
          dotnet nuget list source | grep -q 'https://api.nuget.org/v3/index.json' \
            || dotnet nuget add source https://api.nuget.org/v3/index.json

          # update <Version> tag in the CLI project
          sed -i "s/<Version>.*<\/Version>/<Version>${{ steps.set_version.outputs.version }}<\/Version>/" xk/xk.csproj

      - name: Commit and Push Version Update
        shell: bash
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name  "GitHub Action"
          git add xk/xk.csproj
          git commit -m "Auto‑increment version to ${{ steps.set_version.outputs.version }} [skip ci]"
          git push

      # ────────────────────────── build & test ────────────────────────────────
      - name: Build and Test
        shell: bash
        run: |
          dotnet restore XferKit.sln
          dotnet build  XferKit.sln --configuration Release --no-restore -p:Version=${{ steps.set_version.outputs.version }}
          dotnet test   XferKit.sln --configuration Release --no-build   --verbosity normal

  # ────────────────────────── matrix build for each platform ───────────────────
  cross-platform-builds:
    name: Build for All Platforms
    needs: auto-build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            runtime: win-x64
          - os: ubuntu-latest
            runtime: linux-x64
          - os: macos-latest
            runtime: osx-x64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Publish self‑contained binaries
        shell: bash
        run: |
          dotnet publish XferKit.Cli/XferKit.Cli.csproj \
            --runtime ${{ matrix.runtime }} \
            --self-contained true \
            --configuration Release \
            -p:PublishTrimmed=true \
            -p:Version=${{ needs.auto-build.outputs.version }} \
            --output ./publish/

      # (installer‑creation steps go here – unchanged)

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: XferKit-installer-${{ matrix.runtime }}
          path: ./publish/*

  # ────────────────────────── release job ──────────────────────────────────────
  publish-release:
    name: Publish GitHub Release
    needs: cross-platform-builds
    runs-on: ubuntu-latest
    steps:
      - name: Download all installers
        uses: actions/download-artifact@v4
        with:
          path: release-assets
          merge-multiple: true     # flatten artifact contents

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.auto-build.outputs.version }}
          name:  XferKit v${{ needs.auto-build.outputs.version }}
          prerelease: false
          generate_release_notes: true
          files: release-assets/**
